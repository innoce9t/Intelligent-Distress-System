#include <OBD.h>
#include <OneSheeld.h>
#include <Wire.h>

COBDI2C obd;
HttpRequest request("http://api.openweathermap.org/data/2.5/weather?q=Bradford,uk");

int RPM;
int Speed;
boolean carstarted = false ,assistance = false;
char latitude[30], longitude[30], message [100];
int currentTime = 0 , lastTimeTaken = 0;
float axis[3];
int magnitude = 30;
const char yes[] = "yes";
const char no[] = "no";


void setup() {
OneSheeld.begin();
obd.begin();
while (!obd.init());
carstarted = true;
Logger.stop();
Clock.begin();
request.setOnSuccess(&onSuccess);
request.getResponse().setOnJsonResponse(&onJsonReply);
TextToSpeech.say("would you like to turn on driving assistance");
VoiceRecognition.start();
    if(!strncmp(yes,VoiceRecognition.getLastCommand(),3))
      assistance = true;
      
   else if(!strncmp(no,VoiceRecognition.getLastCommand(),2))
      TextToSpeech.say("Okay");
OneSheeld.delay(3000);
Internet.performGet(request);


}
/*----------------------------------------------------------------------------------*/
void loop() 
{
 dtostrf(GPS.getLatitude(),3,6,latitude);
 dtostrf(GPS.getLongitude(),3,6,longitude);
 axis[0] = AccelerometerSensor.getX();
 axis[1] = AccelerometerSensor.getY();
 axis[2] = AccelerometerSensor.getZ();
if (assistance) drivingassistant();
 
if (obd.init())
  { 
    obd.read(PID_RPM,RPM);
    obd.read(PID_SPEED,Speed);
    Loggingdata();
    if (sqrt((axis[0]*axis[0])+(axis[1]*axis[1])+(axis[2]*axis[2])) > magnitude)
     { 
       signalgen();
       }
   }
      
if (!obd.init() && carstarted)
 { 
   signalgen();
 
    }
}
/*------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
void signalgen()
{
       strcat (message, "Car crashed, need help at ");
       strcat (message, "http://maps.google.com/maps?q=");
       strcat (message, latitude);
       strcat (message, ",");
       strcat (message, longitude);
       carstarted=false;
       TextToSpeech.say("Would you like me to send a distress signal");
       OneSheeld.delay(2550);
       VoiceRecognition.start();
       if(!lastTimeTaken)
       {
         lastTimeTaken = millis ();
         currentTime = lastTimeTaken;
         }
       if (!VoiceRecognition.isNewCommandReceived() && currentTime - lastTimeTaken > 10000)
       {
               TextToSpeech.say("No command recognised, sending the signal ");         
               SMS.send("07463376823", message);
               Terminal.print("Distress Signal Sent");
               carstarted = false;
             }
       else
       {
         if (VoiceRecognition.isNewCommandReceived())
            {  
             if (!strcmp(yes,VoiceRecognition.getLastCommand()))
              {
                 TextToSpeech.say("okay ");
                 SMS.send("07463376823", message);
                 Terminal.print("Distress Signal Sent");
                 carstarted = false;
                     }
                 
          else if (!strcmp(no,VoiceRecognition.getLastCommand()))
             {
                 TextToSpeech.say("Distress Siganl cancelled");
                 carstarted = false;
                 lastTimeTaken = 0;
                 currentTime = 0;
                 }
              }
            }
       }
   
/*----------------------------------------------------------------------------------*/
 void Loggingdata()
 {

    
   if(RPM > 6)
    {  
        Logger.start("Readings");
        Logger.add("Hour", String(Clock.getHours()));
        Logger.log();
        Logger.add("Minute", String(Clock.getMinutes()));
        Logger.log();
        Logger.add("Second", String(Clock.getSeconds()));
        Logger.log();
        Logger.add("RPM", String(RPM));
        Logger.log();
        Logger.add("Speed", String(Speed));
        Logger.log();
        Logger.add("Latitude", latitude);
        Logger.log();
        Logger.add("Longitude", longitude);
        Logger.log();  
        OneSheeld.delay(1000);
           }
    else
    {
        Logger.stop();
      }
   }
/*----------------------------------------------------------------------------------*/
  void onSuccess(HttpResponse & response)
{
  response["weather"][0]["main"].query();
}
/*----------------------------------------------------------------------------------*/
void onJsonReply(JsonKeyChain & hell,char * output)
{
    TextToSpeech.say("the temperature today is");
    TextToSpeech.say(output);
    TextToSpeech.say("Kelvin");
    OneSheeld.delay(100);
    
//if ( !strncmp("Sunny" , output,5))TextToSpeech.say ("it is advisable to start the engine and let the car be idle for five minutes to allow complete circulation of oil");
//if ( !strncmp("Rainy" , output,5))TextToSpeech.say ("it is advisable to keep the speed of the car below hunred kilometres per hour to avoid tire slipping");
//if ( !strncmp("Snowy" , output,5))TextToSpeech.say ("it is advisable to start the engine and allow complete circulation of fuel while car is idle for five minutes");


}
/*----------------------------------------------------------------------------------*/
void drivingassistant()
{
  int oiltemp;

 if (obd.read(PID_ENGINE_OIL_TEMP,oiltemp))
 { digitalWrite(13, oiltemp>70 ? HIGH:LOW); //blue
   digitalWrite(12, oiltemp>90 ? HIGH:LOW); //green
   digitalWrite(11, oiltemp>116 ? HIGH:LOW); // red
  }
}
